
version: "2"

networks:
  internal:
    driver: bridge

services:
  cloudflare-ddns:
      image: oznu/cloudflare-ddns:latest                 # use 'latest' para linux ou 'armhf' or 'aarch64' se usar um Raspberry Pi
      restart: always
      networks:
        - internal
      environment:
        - API_KEY=${APICLOUNDFLARE}     # coloque sua chave de api da cloudflare
        - ZONE=${DOMAIN}                     # coloque o seu dominio                             
        - PROXIED=true

  mysql:
    container_name: mysql_${HOST}
    image: mysql:5.7
    restart: always
    ports:
      - 3307:3306
    environment:
      # MYSQL_DATABASE: ${DB}
      MYSQL_USER: ${USER}
      MYSQL_ROOT_PASSWORD: ${PASS}
      MYSQL_PASSWORD: ${PASS}
      SERVICE_NAME: mysql.${HOST}
    volumes:
      - ../database/mysql:/var/lib/mysql
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.mysql.rule=Host(`mysql.${DOMAIN}`)
      - traefik.http.services.mysql.loadbalancer.server.port=3306

  phpmyadmin:
    container_name: "phpmyadminserver"
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql_${HOST}
    depends_on:
      - mysql
    ports:
      - 2052:80
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

  pihole:
    container_name: pihole
    domainname: localhost
    hostname: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    volumes:
      - ./pihole/docker/pihole/pihole:/etc/pihole
      - ./pihole/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
    environment:
      - TZ= 'America/Chicago'
      - VIRTUAL_HOST=pihole.czs.localhost 
      - WEBPASSWORD=${PASSPIHOLE}
    ports:
      - 5380:80
    dns:
      - 127.0.0.1
      - 1.1.1.1
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole-http.rule=Host(`pihole.czs.localhost`)"
      - "traefik.http.routers.pihole-http.entrypoints=web"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.tcp.routers.pihole-dns.entrypoints=dns"
      - "traefik.tcp.routers.pihole-dns.service=pihole"
      - "traefik.udp.routers.pihole-udp.entrypoints=udpdns"
      - "traefik.udp.routers.pihole-udp.service=pihole"
      - "traefik.udp.services.pihole.loadbalancer.server.port=53"   

  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.udpdns.address=:53/udp"
    ports:
      - "2095:80"
      - "8880:8080"
      - "2096:443"
      - "53:53/udp"
      - "53:53"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080

