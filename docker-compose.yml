version: "2"

networks:
  internal:
    driver: bridge

services:
  # portainer:
  #   image: portainer/portainer
  #   command: -H unix:///var/run/docker.sock
  #   restart: always
  #   networks:
  #     - internal
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # - portainer_data:/data
  #   labels:
  #     - "traefik.enable=true"
  #     - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
  #     - traefik.http.services.portainer.loadbalancer.server.port=9000

  mysql:
    container_name: mysql_${HOST}
    image: mysql:5.7.32
    restart: always
    ports:
      - 3306:3306
    environment:
      # MYSQL_DATABASE: ${DB}
      MYSQL_USER: ${USER}
      MYSQL_ROOT_PASSWORD: ${PASS}
      MYSQL_PASSWORD: ${PASS}
      SERVICE_NAME: mysql.${HOST}
    volumes:
      - ./database/mysql:/var/lib/mysql
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.mysql.rule=Host(`mysql.${DOMAIN}`)
      - traefik.http.services.mysql.loadbalancer.server.port=3306

  phpmyadmin:
    container_name: "phpmyadmin"
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql_${HOST}
    depends_on:
      - mysql
    ports:
      - 2050:80
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
